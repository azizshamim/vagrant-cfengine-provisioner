# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'cfengine_provisioner.rb'

Vagrant::Config.run do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Define just a hub. For a multi-VM setup see enterprise/Vagrantfile
  # the same technique can be used for CFEngine Community, just omit
  # the installation of the Enterprise packages).
  config.vm.define :cfhub do |hub_config|
    # Every Vagrant virtual environment requires a box to build off of.
    hub_config.vm.box = "lucid32"
    hub_config.vm.box_url = "http://files.vagrantup.com/lucid32.box"

    # For debugging
    # hub_config.vm.boot_mode = :gui

    # Assign different IP addresses depending on the box, to avoid
    # ssh warnings.
    hub_config.vm.network :hostonly, "10.1.1.10"

    # Use the CFEngine provisioner
    hub_config.vm.provision CFEngineProvisioner do |cf3|

      # Mode of operation for the provisioner.
      # If mode == :bootstrap (default), then CFEngine will be
      # bootstrapped in this machine if it's not bootstrapped already.
      # (if in addition force_bootstrap is "true", then it will be
      # always bootstrapped).
      # If mode == : singlerun, then cf-agent will be run only
      # once after the VM boots, and it will be used to execute
      # the CFEngine policy file named in runfile_path.
      # cf3.mode = :bootstrap

      # Whether to force bootstrap even if CFEngine has already been
      # bootstrapped.
      # cf3.force_bootstrap = false

      # List of classes to pass to cf-agent when executing it on the VM
      # cf3.classes = [ "class1", "class2" ]

      # Additional arguments to pass to cf-agent, if needed.
      # cf3.agent_options = "-b test"

      # Attempt to install CFEngine if not installed yet. Depends on the
      # binary package repositories from http://cfengine.com/pub/
      # Any "true" value will cause CFEngine to be installed if it's not
      # present already. If this parameter is set to :force,
      # then CFEngine will be reinstalled even if it's already there.
      # cf3.install_cfengine = true

      # Should this machine be configured as a policy hub?
      # cf3.am_policy_hub = true

      # Address of the policy server to use for bootstrapping. Should
      # be the local IP address for policy servers.
      # If not specified, the provisioner will automatically use the
      # IP address of the first non-localhost network interface.
      # Unfortunately in Vagrant VMs this is normally a NAT interface
      # that has no communication to the outside world, so we need
      # to set it manually to the address in a host-only network
      # which needs to be configured using the config.vm.network
      # parameter, as shown below.
      # cf3.policy_server = "10.1.1.10"
    
      # URL of a .tar.gz file that gets unpacked under /var/cfengine/
      # after installation but before bootstrap. This file should
      # contain the contents of /var/cfengine exactly as desired,
      # so it should contain the appropriate directories, for example
      # masterfiles/foo.cf, inputs/bar.cf, ppkeys/, etc.
      # cf3.tarfile_url = 'http://localhost/cfengine_files.tar.gz'

      # Filename of a .tar.gz file that gets unpacked under /var/cfengine/
      # The effect is the same as with cfengine_tarfile_url, but this
      # is expected to be a path relative to the current directory (where
      # the Vagrantfile is stored).
      # cf3.tarfile_path = 'cfengine_files.tar.gz'

      # Directory to copy to /var/cfengine. Must be relative to current
      # directory. E.g. if its value is 'cfengine_files', the contents
      # of /vagrant/cfengine_files/ will be copied to /var/cfengine
      # on the VM.
      # cf3.files_path = 'cf_files'

      # CFEngine policy file to execute.
      # Must be a relative path inside the current directory.
      # If mode == :singlerun, this file will be executed immediately
      # after installing CFEngine.
      # If mode == :bootstrap, this will be executed after the
      # host is bootstrapped.
      # cf3.runfile_path = 'test.cf'

      # Normally this shouldn't be modified, except for testing or
      # for internal repositories
      # cf3.debian_repo_line = 'deb http://cfengine.com/pub/apt $(lsb_release -cs) main'

      # Normally this shouldn't be modified, except for testing or
      # for internal repositories
      # cf3.yum_repo_url = 'http://cfengine.com/pub/yum/'
    end

  end

end
